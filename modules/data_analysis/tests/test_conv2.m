%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
assert_isequal(nargin('conv2'), 4);
assert_isequal(nargout('conv2'), 1);
%=============================================================================
s = [1 2 1; 0 0 0; -1 -2 -1];
A = zeros(10,10);A(3:7,3:7) = 1;
R = conv2(s, A);
REF = [0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     1     3     4     4     4     3     1     0     0     0;
0     0     1     3     4     4     4     3     1     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0    -1    -3    -4    -4    -4    -3    -1     0     0     0;
0     0    -1    -3    -4    -4    -4    -3    -1     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0 ];
assert_isequal(R, REF)
%=============================================================================
X = zeros(10);
X(3:7,3:7) = ones(5);
V = [1 0 -1]';
U = [1 2 1];
R = conv2(U, V, X);
REF = [ 0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     1     1     0     0     0    -1    -1     0     0     0;
0     0     3     3     0     0     0    -3    -3     0     0     0;
0     0     4     4     0     0     0    -4    -4     0     0     0;
0     0     4     4     0     0     0    -4    -4     0     0     0;
0     0     4     4     0     0     0    -4    -4     0     0     0;
0     0     3     3     0     0     0    -3    -3     0     0     0;
0     0     1     1     0     0     0    -1    -1     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0;
0     0     0     0     0     0     0     0     0     0     0     0];
assert_isequal(R, REF)
%=============================================================================
R = conv2(2:6, 3, [1:11; 2:12; 21:31], 'same');
REF = [156   183   210   237   264   291   318   345   372   399   426;
228   264   300   336   372   408   444   480   516   552   588;
300   345   390   435   480   525   570   615   660   705   750];
assert_isequal(R, REF)
%=============================================================================
