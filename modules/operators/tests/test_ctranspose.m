%=============================================================================
% Copyright (c) 2016-present Allan CORNET (Nelson)
%=============================================================================
% This file is part of the Nelson.
%=============================================================================
% LICENCE_BLOCK_BEGIN
% SPDX-License-Identifier: LGPL-3.0-or-later
% LICENCE_BLOCK_END
%=============================================================================
A = zeros(3, 0);
R = A';
assert_isequal(size(R), [0 3]);
%=============================================================================
A = 3;
R = A';
assert_isequal(R, 3);
%=============================================================================
A = -i;
R = A';
assert_isequal(R, i);
%=============================================================================
A = [20 10; 90 70; 20 80; 30 50];
R = A';
REF = [    20    90    20    30;
10    70    80    50];
assert_isequal(R, REF);
%=============================================================================
A = [-1i, 2+1i; 4+2i, -2i];
R = A';
REF = [i, 4-2i; 2-i, 2i];
assert_isequal(R, REF);
%=============================================================================
A = 'Nelson';
R = A';
REF = ['N';'e';'l';'s';'o';'n'];
assert_isequal(R, REF);
%=============================================================================
A = single([-1i, 2+1i; 4+2i, -2i]);
R = A';
REF = single([i, 4-2i; 2-i, 2i]);
assert_isequal(R, REF);
%=============================================================================
A = int64([20 10; 90 70; 20 80; 30 50]);
R = A';
REF = [    20    90    20    30;
10    70    80    50];
assert_isequal(R, int64(REF));
%=============================================================================
